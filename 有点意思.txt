C
C++
2d:COCOS2DX
3d:UNITY3D
C#
粒子系统
openGL
lua
objectiveC Xcode
数据结构和算法
IOS sdk
game的组成和架构

UE4

[大纲]

蓝图编程
	游戏性功能实现（角色重生，打怪扣血）
	蓝图节点
	蓝图通信
图像和渲染（处理画面到自己想要的效果）
	材质节点
	光照
	后期处理盒子
过场动画
	蓝图节点
	界面操作
骨骼动画
	动画编辑器
	动作导入
	混合空间
UMG用户界面
	UI界面排版
	UI功能性逻辑（拖拽点击等）
	UI动画
AI行为树
	蓝图节点
	制作
基本操作
	引擎安装
	界面
	移动旋转缩放物体
关卡流
	两个大型的地形编辑软件 world mechine，geo control2与UE4的对接
	关卡流的几种用法
地形编辑器
	地形动画，纸杯编辑器
	简单的地形材质制作
物理模拟
	碰撞物理使用
音效系统
	音频系统编辑器节点介绍
游戏打包和优化

[官网资源]
	文档是很重要的学习资料
	官方博客
	讨论区
	






OC

[第一课时]
是OC的所有量都需要正在前面加上@来进行标识

Xcode OSX下创建命令行工程
将TYPE改成Foundation
main程序从main.c变成了main.m
.mm里既可以写C也可以写OC和C++
.m中既可以使用c也可以使用OC

#import<Foundation/Foundation.h>把C语言中的所有东西都包含了
尽量使用import

@autoreleasepool自动释放池 一种内存管理方式
主要是将对象进行释放
要将代码写在它的大括号中

NSlog类似print,但里面必须是OC语言(@"exp");
NSlog的输出比print的多,会多一些系统提示的信息.

OC中的布尔型是用BOOL来声明的,值有YES 和 NO
而真正的类型是无符号的char型
而char是用ASCII码来表示的,YES就是1,NO就是O.
NHDTA-792

TensorFlow

[神经网络]
	所有神经元之间的连接都是固定不可更换的
	在人工神经网络中没有凭空产生新的连接
	人工神经网络一种典型的学习方法是：我已经知道吃糖的时候手该怎么动，但是我需要神经网络来学习完成吃糖这个事情，所以我准备足够多的吃糖的学习数据，然后一次次将数据放入这个神经网络之中，然后来对比每次放入之后手的动作是不是要糖的动作，然后调节不同神经元的强度(误差反向传递)，也可以看做将传递过来的信号传回去，看这个神经元对于这个结果有没有贡献，让神经元反思和修正，争取下一次作出更好的贡献，
	人工神经网络靠不断正向和反向传递信号来优化神经元，和网络。本质上是一个能让计算机处理和优化的数学模型。


[什么是机器学习]
	又大量的人工神经元连接来进行计算，能在外部信息的基础上改变内部结构，是一种自己逐渐适应的过程，现代神经网络是一种基于传统概率学的，




